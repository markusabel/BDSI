%% Iterate over Bayes method JMAP or VBA
% Copyright Robert Niven, 2019-2024, All Rights Reserved
% hardwired for 3D systems; need to implement for 1D, 2D, 4D

% colour codes from https://en.wikipedia.org/wiki/Web_colors

clear k aev bev afv bfv ...
    psie modee omegae psif modef omegaf ...
    crit0 diffXi ...
    fh vf ve Residcol Regcol HR Delta niter numintit ...
    mean_ve std_ve mean_vf std_vf ...
    lambdamat lambda ...
    Resid2 Reg2 Jtilde2 ...
    ResidGnorm RegGnorm ...
    logve logvf logdetve logdetvf Resid Reg ...
    logdetDelta PostGnorm logPost diffGnorm  ... 
    Omega logdetOmega EvidGnorm logEvid EvidGnormalt logEvidalt ...
    Gnormcheck logBayescheck ...
    aic aicc bic logL2 aic2norm bic2norm aicc2norm EB 
format shortEng

'Iterate Bayes **********'

%parameters

k=1;   %iteration number (cannot start iterations from zero !)

%can iterate over model or error or both
%uses single crit0 over e or f (not both)

%initial values
%careful: aev, bev etc are o-vectors for each k (hence k rows, o columns)
aev(k,:)=ae0*ones(1,o); 
bev(k,:)=be0*ones(1,o); 
afv(k,:)=af0*ones(1,o); 
bfv(k,:)=bf0*ones(1,o);

psie(k,:)=bev(k,:)./(aev(k,:)-1);  
modee(k,:)=bev(k,:)./(aev(k,:)+1);  
omegae(k,:)=bev(k,:).*bev(k,:)./((aev(k,:)-1).*(aev(k,:)-1).*(aev(k,:)-2));  
    
psif(k,:)=bfv(k,:)./(afv(k,:)-1);  
modef(k,:)=bfv(k,:)./(afv(k,:)+1);  
omegaf(k,:)=bfv(k,:).*bfv(k,:)./((afv(k,:)-1).*(afv(k,:)-1).*(afv(k,:)-2));  

if iterateBayes==1 | iterateBayes==4 | iterateBayes==5
    crit0(k)=max(psie(k,:));  %default, iterate over error
    xlab='$\frac{\beta_{\epsilon_j}(k)}{\alpha_{\epsilon_j}(k)-1}$';
elseif iterateBayes==2 %iterate over model
    crit0(k)=max(psif(k,:)); 
    xlab='$\frac{\beta_{\Xi_j}(k)}{\alpha_{\Xi_j}(k)-1}$';
elseif iterateBayes==3 
    crit0(k)=max(psie(k,:));  %iterate equally over error and model
    xlab='$\frac{\beta_{\epsilon_j}(k)}{\alpha_{\epsilon_j}(k)-1},\frac{\beta_{\Xi_j}(k)}{\alpha_{\Xi_j}(k)-1}$';
end

%marker=1

while crit0(k) > crit0_tol   
%outer iteration on crit0 criterion
%crit0 now allows for all j, but is single value for each k

'Outer Iteration **********'
    k=k+1
    kmax=k
    format shortEng

    %marker=2
    
    %parameters and convergence criterion updates
    if iterateBayes==1  %default, iterate over error
        aev(k,:)=aev(k-1,:)*param_fact;
        bev(k,:)=bev(k-1,:)/param_fact;  
        afv(k,:)=afv(k-1,:);
        bfv(k,:)=bfv(k-1,:); 
    elseif iterateBayes==2  %iterate over model
        aev(k,:)=aev(k-1,:);
        bev(k,:)=bev(k-1,:);
        afv(k,:)=afv(k-1,:)*param_fact;
        bfv(k,:)=bfv(k-1,:)/param_fact; 
    elseif iterateBayes==3  %iterate over error and model
        aev(k,:)=aev(k-1,:)*param_fact;
        bev(k,:)=bev(k-1,:)/param_fact; 
        afv(k,:)=afv(k-1,:)*param_fact;
        bfv(k,:)=bfv(k-1,:)/param_fact; 
    elseif iterateBayes==4 %iterate over error (vary b, fixed a)
        aev(k,:)=aev(k-1,:);
        bev(k,:)=bev(k-1,:)/param_fact;  
        afv(k,:)=afv(k-1,:);
        bfv(k,:)=bfv(k-1,:); 
    elseif iterateBayes==5 %iterate over error (vary a, fixed b)
        aev(k,:)=aev(k-1,:)*param_fact;
        bev(k,:)=bev(k-1,:);  
        afv(k,:)=afv(k-1,:);
        bfv(k,:)=bfv(k-1,:); 
    end

    psie(k,:)=bev(k,:)./(aev(k,:)-1);  
    modee(k,:)=bev(k,:)./(aev(k,:)+1);  
    omegae(k,:)=bev(k,:).*bev(k,:)./((aev(k,:)-1).*(aev(k,:)-1).*(aev(k,:)-2));  
    
    psif(k,:)=bfv(k,:)./(afv(k,:)-1);  
    modef(k,:)=bfv(k,:)./(afv(k,:)+1);  
    omegaf(k,:)=bfv(k,:).*bfv(k,:)./((afv(k,:)-1).*(afv(k,:)-1).*(afv(k,:)-2));  

    if iterateBayes==1 | iterateBayes==3 | iterateBayes==4 | iterateBayes==5
        crit0(k)=max(psie(k,:));  %default, iterate over error
    elseif iterateBayes==2
        crit0(k)=max(psif(k,:)); 
    end

    for j=1:o   %inner loop over output dimensions o
    'Dimension *****' 
    j
    g=dx(:,j);  %is working correctly

    %marker=3

         if Bayesmeth==1
             if jmap=='JMAP6' 
                 [fh,vf,ve,Residcol,Regcol,HR,Delta,niter]=...
                     JMAP6(g,H,aev(k,j),bev(k,j),afv(k,j),bfv(k,j),ntol);
                 %must ensure kth versions of a, b constants are input to this routine
             else
                   %nothing
             end;
         
         elseif Bayesmeth==2
             if vba=='VBA6' 
                [fh,vf,ve,Residcol,Regcol,HR,Delta,niter]=...
                    VBA6(g,H,aev(k,j),bev(k,j),afv(k,j),bfv(k,j),ntol);
                 %must ensure kth versions of a, b constants are input to this routine
             else
                   %nothing 
             end;

         end;
         
     %calc of variables ******

        %marker=4

         numintit(k,j) = niter

         %construct for jth column and kth iteration
         true_Xi(:,j)
         Xi(:,j)=fh
         if knownXi=='Y'       %calc data - known Xi
            diffXi(:,j)=true_Xi(:,j) - Xi(:,j)    
         elseif knownXi=='N'    %unknown Xi
            diffXi(:,j) = NaN;          %protect against mismatch for posterior calc; will mess with graphs
            %diffXi=Xi(:,i)-Xi(:,i);    %to show errors; need to implement
         end;

         %'Calc ve, mean(ve), std(ve)' 
         %ve
         mean_ve(j)=mean(ve);
         std_ve(j)=std(ve);

         %'Calc vf, mean(vf), std(vf)' 
         %vf
         mean_vf(j)=mean(vf);
         std_vf(j)=std(vf);

         lambdamat(:,j)=mean_ve(j)*ones(cc,1)./vf;  %c-vector over alphabet, jth column
         %lambda(k,j)=mean_ve(j)/mean_vf(j);  %single value for each dimension
         lambda(k,j)=min(lambdamat(:,j));  %single value for each dimension

         %2norm quantities
         Resid2(k,j)= (norm(dx(:,j) - H*Xi(:,j)))^2      %2norm for likelihood
         Reg2(k,j)= (norm(Xi(:,j)))^2                    %2norm for prior
         Jtilde2(k,j)=Resid2(k,j) + lambda(k,j) * Reg2(k,j)   %2norm objective function incl lambda, each j
         %problematic; 2-norm not representative unless Gaussian isotropic
         
         %Gen Gaussian norm quantities - from inside JMAP5 or VBA5
         ResidGnorm(k,j)=Residcol           %Gaussian norm for likelihood
         RegGnorm(k,j)=Regcol               %Gaussian norm for prior
         %JGnorm(k,j)=Residcol+Regcol ;       %sum of norms, not much meaning

         %Gen Gaussian norm quantities 
         %go direct to det using log simplification, assuming diag matrices
         %(assumption is correct - these are constructed as diagonal)
         logve=log(ve);
         logvf=log(vf);
         logdetve(k,j)=sum(logve);
         logdetvf(k,j)=sum(logvf);
         Resid(k,j)=-1/2*Residcol - m/2*log(2*pi) - 1/2*logdetve(k,j);  %log likelihood exact
         Reg(k,j)=-1/2*Regcol - cc/2*log(2*pi) - 1/2*logdetvf(k,j);  %log prior exact
         %J(k,j)=Resid(k,j) + Reg(k,j);  %sum of log likelihood + log prior, does not include log evidence

         %Posterior covariance calc
         %both HR, Delta are c x c, fairly small
         HR                           %inverse of posterior covariance matrix, jth column, discard each version
         Delta                        %posterior covariance matrix = Delta_i, jth column, discard each version
         %rank(Delta)                  %Matrix rank of Delta
         %cond(Delta)                  %condition number of Delta
         %det(Delta)                   %det of Delta, can underflow to zero
         Vf(:,j)=diag(Delta)          %diag of posterior covariance matrix, jth column, retain columns       
         Vfsqrt(:,j)=sqrt(Vf(:,j))          %std devs from posterior covariance matrix, jth column, retain columns       

         %need some ranking of non-diag of covariance matrix

         %log Posterior direct calc
         %here use the logdet function
         logdetDelta(k,j)=-logdet(HR)                    %logdet function, Lin 2008, uses LU factorization
                                                         %applied to HR = inverse Delta, then converted, to reduce ill-cond problems
         PostGnorm(k,j)=diffXi(:,j)'*HR*diffXi(:,j)     %Gaussian norm for posterior 
         logPost(k,j)=-1/2*PostGnorm(k,j) - cc/2*log(2*pi) ...
             - 1/2*logdetDelta(k,j);  %log posterior exact

         %separation between likelihood and posterior Gaussian norms
         diffGnorm(k,j)=ResidGnorm(k,j)-PostGnorm(k,j)
         
         %Evidence quantities
         estY(:,j)=  zeros(m,1);   % H*mu_prior(:,j);    %evidence mean, jth column, retain columns; assumes zero prior mean 
         Omega=H*diag(vf)*H'+diag(ve);                   %evidence cov matrix, jth column, discard each version   
         %rank(Omega)                                    %Matrix rank of Omega, very comput expensive!
         %cond(Omega)                                    %condition number of Omega, very comput expensive!
         %det(Omega)                                     %very comput expensive!
         invOmega = inv(Omega);                          %inverse of evidence cov matrix, jth column, discard each version
         %Omegadiag = diag(Omega);                       %diag of evidence cov matrix
         %logOmegadiag=log(Omegadiag);                   %log of diag of evidence covariance matrix
         %logdetOmega(k,j)=sum(logOmegadiag);            %assume diag matrix, is not correct       
         logdetOmega(k,j)=-logdet(invOmega)              %logdet function, Lin 2008, uses LU factorization
                                                         %applied to inverse Omega, then conv, to reduce ill-cond problems
         diffY(:,j)=dx(:,j) - estY(:,j);                 %for dynamical system, dx is the same as Y
         EvidGnorm(k,j)=diffY(:,j)'*invOmega*diffY(:,j)       %Gaussian norm for evidence      
         logEvid(k,j)=-1/2*EvidGnorm(k,j) - m/2*log(2*pi) ...
             - 1/2*logdetOmega(k,j);  %log evidence exact
  
         %alternative evidence calc from other terms
         EvidGnormalt(k,j)= ResidGnorm(k,j) + RegGnorm(k,j) - PostGnorm(k,j)   %Gnorms
         logEvidalt(k,j)= Resid(k,j) +  Reg(k,j) - logPost(k,j); %logs of full Gaussians

         %Bayesian check mult and sum
         Gnormcheck(k,j) = ResidGnorm(k,j) + RegGnorm(k,j) - PostGnorm(k,j) ...
             - EvidGnorm(k,j)   %Gnorms, will not be normalised
         logBayescheck(k,j) = Resid(k,j) + Reg(k,j) - logPost(k,j) - logEvid(k,j)     %logs of full Gaussians; should be 0
 
         %other metrics
         %old calc using only the Gaussian norm of the likelihood
         %[aicGnorm(k,j),bicGnorm(k,j)]=aicbic(ResidGnorm(k,j),n,m)
         
         aic(k,j)= -2*Resid(k,j)+2*cc;                       %Bishop eq 1.73 mod with -2* factor
         bic(k,j)= -2*Resid(k,j)+cc*log(m);                  %Bishop eq 4.139 mod with -2* factor
         %[aic(k,j),bic(k,j)]=aicbic(Resid(k,j),cc,m);       %NO NEED! includes -2* quantities

         %corrected AIC; note Mangan etal 2017 uses incorrect correction in code
         aicc_err= 2*(cc+1)*(cc+2)/(m-cc-2);         %error in correction
         aicc(k,j)= aic(k,j) + aicc_err;             %correction

         %from Mangan etal 2017, with BIC corrected
         %note SINDy_BIC is incorrect! (extra factor of 2 on cc*log(m) term)
         %also Chen & Li 2021
         logL2(k,j)=(-m/2*log(Resid2(k,j)/m));
         aic2norm(k,j)= -2*logL2(k,j)   +2*cc;
         bic2norm(k,j)= -2*logL2(k,j)   +cc*log(m);

         aicc2norm(k,j)= aic2norm(k,j) + aicc_err;    %corrected

         %Zhang & Lin "error bar"
         CV=Vf(:,j)./(Xi(:,j).*Xi(:,j));
         EB(k,j)=sum(CV);
         
         'end Dimension *****' 
         %%
         % *BOLD TEXT* 

    end
    
    'Outputs from iteration, all dimensions *****' 
    %now all to file, not to screen

    format longEng
   
    'external iterations'
    k

    'internal iterations'
    numintit(k,:)

    'parameters ae, be, af, bf'
    aev(k,:);
    bev(k,:);
    afv(k,:);
    bfv(k,:);

    'inverse gamma psie, modee, omegae'
    psie(k,:);
    modee(k,:);
    omegae(k,:);

    'inverse gamma psif, modef, omegaf'
    psif(k,:);
    modef(k,:);
    omegaf(k,:);

    'criterion crit0'
    crit0(k);

    'mean(ve), std(ve)' 
    mean_ve;
    std_ve;

    'mean(vf), std(vf)' 
    mean_vf;
    std_vf;

    'internal iterations'
     numintit(k,:)

    'true Xi, calc Xi, diff Xi'
    true_Xi;
    Xi;
    diffXi;
    
    'lambda matrix'
    lambdamat;

    'Selected lambda, for kth iteration' 
    lambda(k,:);
    
    '2-residual, 2-reg term and J, for kth iteration' 
    Resid2(k,:);
    Reg2(k,:);
    Jtilde2(k,:) ;  
    
    'Gaussian norms: residual, reg term and J, for kth iteration' 
    ResidGnorm(k,:);
    RegGnorm(k,:);
    %JGnorm(k,:);

    'log Determinants of ve, vf, for kth iteration' 
    logdetve(k,:);
    logdetvf(k,:);

    'Gaussian full terms: residual, reg term and J, for kth iteration' 
    Resid(k,:)
    Reg(k,:)
    %J(k,:)
    
    'Diagonal of posterior: variance and stddev'
    Vf;                  %For Lorenz, is 9 x 3 variance matrix on parameters in Xi
    Vfsqrt;

    'log Posterior terms: logdetDelta, Gaussian norm, logPost'
    logdetDelta(k,:);                              %assume diag matrix
    PostGnorm(k,:);                                  %Gaussian norm for posterior 
    logPost(k,:);                                    %log posterior exact

    'Evidence quantities: logdetOmega, EvidGnorm, logEvid'
    logdetOmega(k,:);
    EvidGnorm(k,:);                                  %Gaussian norm for evidence      
    logEvid(k,:);                                    %log evidence exact

    'Alt Evidence quantities: EvidGnormalt, logEvidalt'
    EvidGnormalt(k,:);
    logEvidalt(k,:);
    
    'Bayesian check Gnorm sum, log prob sum'
    Gnormcheck(k,:); 
    logBayescheck(k,:);

    'Metrics aic, bic, aicc_err, aicc, EB, based on full Gaussians, for kth iteration' 
    aic(k,:);
    bic(k,:);
    aicc_err ;   
    aicc(k,:);
    EB(k,:);
    
    'Metrics logL2, aic2, bic2, aicc2, for kth iteration' 
    logL2(k,:);
    aic2norm(k,:);
    bic2norm(k,:);
    aicc2norm(k,:);
    
    
    %pause

    % Show and compare the coefficients and generated time series
    if dynsys==1
         Show_comparisons6a;
    elseif hydrolmodel==1 | RRmodel==1
         Show_comparisons8;
    end;
    
    'end kth Iteration **********'

end

'Results from all iterations **********'
format longEng

kspan=[2:1:kmax]; %k data starting from 2

%assembly of vectors or matrices
%trueXi known

    if Bayesmeth==1
        numextit_JMAP=kmax
        crit0_JMAP=crit0   
       
        outputs_JMAP

    elseif Bayesmeth==2
        numextit_VBA=kmax
        crit0_VBA=crit0   

        outputs_VBA
        
    end

%set ranges of metrics e.g. aic, bic for those graphs
%metricmin= min(min(aicGnorm(k,:), bicGnorm(k,:))/5)
%metricmax= max(max(aicGnorm(k,:), bicGnorm(k,:))*5)

%set ranges of crit0 for those graphs
if k==2
    crit0min= min(crit0);
    crit0max= max(crit0);
    lambdamin= min(lambda);
    lambdamax= max(lambda);
elseif k>2
    crit0min= min(crit0(2:end));
    crit0max= max(crit0(2:end));
    lambdamin= min(lambda(2:end));
    lambdamax= max(lambda(2:end));
end
crit0lim=[crit0min crit0max];
            
%set ranges of lambda for those graphs
    
%plot over iterations
%hardwired 3D
%need to fix 1D, 2D, 4D

if o==1

    %not implemented yet

elseif o==2

    %not implemented yet

elseif o==3
   %hardwired 3D
   %awkward format to allow filled symbols   
   
   %%%% all norm plots   
   
   %%%% Inverse Gamma hyperparameters - plots against k

       figure, %omit dummy first point
        semilogy(kspan, aev(2:end,1), 'm-o', ...
            kspan, aev(2:end,2), 'm--o', ...
            kspan, aev(2:end,3), 'm-.o', ...
            'MarkerFaceColor','m'), ...
        xlabel('$k$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        %xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        semilogy(kspan, bev(2:end,1), 'r-v', ...
            kspan, bev(2:end,2), 'r--v', ...
            kspan, bev(2:end,3), 'r-.v', ...
            'MarkerFaceColor','r')
        semilogy(kspan, afv(2:end,1), 'c-s', ...
            kspan, afv(2:end,2), 'c--s', ...
            kspan, afv(2:end,3), 'c-.s')
        semilogy(kspan, bfv(2:end,1), 'b-d', ...
            kspan, bfv(2:end,2), 'b--d', ...
            kspan, bfv(2:end,3), 'b-.d')
        hold off
        legend({'$\alpha_{\epsilon_1}$', '$\alpha_{\epsilon_2}$', ...
            '$\alpha_{\epsilon_3}$', ...
            '$\beta_{\epsilon_1}$', '$\beta_{\epsilon_2}$', ...
            '$\beta_{\epsilon_3}$', ...
            '$\alpha_{\Xi_1}$', '$\alpha_{\Xi_2}$', ...
            '$\alpha_{\Xi_3}$', ...
            '$\beta_{\Xi_1}$', '$\beta_{\Xi_2}$', ...
            '$\beta_{\Xi_3}$'}, ...
        'Interpreter','latex','FontSize',16, ...
        'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')
 
       figure, %omit dummy first point
        semilogy(kspan, aev(2:end,1), 'm-o', ...
            kspan, aev(2:end,2), 'm--o', ...
            kspan, aev(2:end,3), 'm-.o', ...
            'MarkerFaceColor','m'), ...
        xlabel('$k$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        %xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        semilogy(kspan, bev(2:end,1), 'r-v', ...
            kspan, bev(2:end,2), 'r--v', ...
            kspan, bev(2:end,3), 'r-.v', ...
            'MarkerFaceColor','r')
        semilogy(kspan, afv(2:end,1), 'c-s', ...
            kspan, afv(2:end,2), 'c--s', ...
            kspan, afv(2:end,3), 'c-.s')
        semilogy(kspan, bfv(2:end,1), 'b-d', ...
            kspan, bfv(2:end,2), 'b--d', ...
            kspan, bfv(2:end,3), 'b-.d')
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')


   %%%% Inverse Gamma hyperparameters - plots against b/(a-1)

   %same legend
   
       figure, %omit dummy first point
        loglog(crit0(2:end), aev(2:end,1), 'm-o', ...
            crit0(2:end), aev(2:end,2), 'm--o', ...
            crit0(2:end), aev(2:end,3), 'm-.o', ...
            'MarkerFaceColor','m'), ...
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(crit0(2:end), bev(2:end,1), 'r-v', ...
            crit0(2:end), bev(2:end,2), 'r--v', ...
            crit0(2:end), bev(2:end,3), 'r-.v', ...
            'MarkerFaceColor','r')
        loglog(crit0(2:end), afv(2:end,1), 'c-s', ...
            crit0(2:end), afv(2:end,2), 'c--s', ...
            crit0(2:end), afv(2:end,3), 'c-.s')
        loglog(crit0(2:end), bfv(2:end,1), 'b-d', ...
            crit0(2:end), bfv(2:end,2), 'b--d', ...
            crit0(2:end), bfv(2:end,3), 'b-.d')
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')
   
   %%%% alpha against beta plots
   
        figure, %omit dummy first point
        loglog(aev(2:end,1), bev(2:end,1), 'r-o', ...
            aev(2:end,2), bev(2:end,2), 'r--o', ...
            aev(2:end,3), bev(2:end,3), 'r-.o', ...
            'MarkerFaceColor','r'), ...
        xlabel('$\alpha_{\imath}$',...
            'Interpreter','latex','FontSize',18),...
        ylabel('$\beta_{\imath}$',...
            'Interpreter','latex','FontSize',18),...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(afv(2:end,1), bfv(2:end,1), 'b-d', ...
            afv(2:end,2), bfv(2:end,2), 'b--d', ...
            afv(2:end,3), bfv(2:end,3), 'b-.d')
        hold off
        legend({'$\beta_{\epsilon_1}$', '$\beta_{\epsilon_2}$', ...
            '$\beta_{\epsilon_3}$', ...
            '$\beta_{\Xi_1}$', '$\beta_{\Xi_2}$', ...
            '$\beta_{\Xi_3}$'}, ...
        'Interpreter','latex','FontSize',16, ...
        'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')
      
        figure, %omit dummy first point
        loglog(aev(2:end,1), bev(2:end,1), 'r-o', ...
            aev(2:end,2), bev(2:end,2), 'r--o', ...
            aev(2:end,3), bev(2:end,3), 'r-.o', ...
            'MarkerFaceColor','r'), ...
        xlabel('$\alpha_{\imath}$',...
            'Interpreter','latex','FontSize',18),...
        ylabel('$\beta_{\imath}$',...
            'Interpreter','latex','FontSize',18),...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(afv(2:end,1), bfv(2:end,1), 'b-d', ...
            afv(2:end,2), bfv(2:end,2), 'b--d', ...
            afv(2:end,3), bfv(2:end,3), 'b-.d')
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')
  
        %%% Inverse Gamma statistics - error - plots against k

        figure, %omit dummy first point
        semilogy(kspan, modee(2:end,1), '-v', ...
            kspan, modee(2:end,2), '--v', ...
            kspan, modee(2:end,3), '-.v', ...
            'Color', '#FF1493', 'MarkerEdgeColor','#FF1493', ...
            'MarkerFaceColor','#FF1493'), ...     %deep pink
        xlabel('$k$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        %xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        semilogy(kspan, psie(2:end,1), '-s', ...
            kspan, psie(2:end,2), '--s', ...
            kspan, psie(2:end,3), '-.s', ...
            'Color', '#00FF7F', 'MarkerEdgeColor','#00FF7F')     %spring green
        semilogy(kspan, omegae(2:end,1), '-^', ...
            kspan, omegae(2:end,2), '--^', ...
            kspan, omegae(2:end,3), '-.^', ...
            'Color', '#000080', 'MarkerEdgeColor','#000080', ...
            'MarkerFaceColor','#000080')     %navy
        hold off
        legend({'$M_{\epsilon_1}$', '$M_{\epsilon_2}$', ...
            '$M_{\epsilon_3}$', ...
            '$E_{\epsilon_1}$', '$E_{\epsilon_2}$', ...
            '$E_{\epsilon_3}$', ...
            '$V_{\epsilon_1}$', '$V_{\epsilon_2}$', ...
            '$V_{\epsilon_3}$'}, ...
        'Interpreter','latex','FontSize',16, ...
        'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

        figure, %omit dummy first point
        semilogy(kspan, modee(2:end,1), '-v', ...
            kspan, modee(2:end,2), '--v', ...
            kspan, modee(2:end,3), '-.v', ...
            'Color', '#FF1493', 'MarkerEdgeColor','#FF1493', ...
            'MarkerFaceColor','#FF1493'), ...     %deep pink
        xlabel('$k$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        %xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        semilogy(kspan, psie(2:end,1), '-s', ...
            kspan, psie(2:end,2), '--s', ...
            kspan, psie(2:end,3), '-.s', ...
            'Color', '#00FF7F', 'MarkerEdgeColor','#00FF7F')     %spring green
        semilogy(kspan, omegae(2:end,1), '-^', ...
            kspan, omegae(2:end,2), '--^', ...
            kspan, omegae(2:end,3), '-.^', ...
            'Color', '#000080', 'MarkerEdgeColor','#000080', ...
            'MarkerFaceColor','#000080')     %navy
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')


%%% Inverse Gamma statistics - error - plots against b/(a-1)

%same legend

        figure, %omit dummy first point
        loglog(crit0(2:end), modee(2:end,1), '-v', ...
            crit0(2:end), modee(2:end,2), '--v', ...
            crit0(2:end), modee(2:end,3), '-.v', ...
            'Color', '#FF1493', 'MarkerEdgeColor','#FF1493', ...
            'MarkerFaceColor','#FF1493'), ...     %deep pink
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(crit0(2:end), psie(2:end,1), '-s', ...
            crit0(2:end), psie(2:end,2), '--s', ...
            crit0(2:end), psie(2:end,3), '-.s', ...
            'Color', '#00FF7F', 'MarkerEdgeColor','#00FF7F')     %spring green
        loglog(crit0(2:end), omegae(2:end,1), '-^', ...
            crit0(2:end), omegae(2:end,2), '--^', ...
            crit0(2:end), omegae(2:end,3), '-.^', ...
            'Color', '#000080', 'MarkerEdgeColor','#000080', ...
            'MarkerFaceColor','#000080')     %navy
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')
   
    %%% Inverse Gamma statistics - model - plots against k

        figure, %omit dummy first point
        semilogy(kspan, modef(2:end,1), '-v', ...
            kspan, modef(2:end,2), '--v', ...
            kspan, modef(2:end,3), '-.v', ...
            'Color', '#FF00FF', 'MarkerEdgeColor','#FF00FF', ...
            'MarkerFaceColor','#FF00FF'),...     %fuchsia
        xlabel('$k$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        %xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        semilogy(kspan, psif(2:end,1), '-s', ...
            kspan, psif(2:end,2), '--s', ...
            kspan, psif(2:end,3), '-.s', ...
            'Color', '#32CD32', 'MarkerEdgeColor','#32CD32')     %lime green
        semilogy(kspan, omegaf(2:end,1), '-^', ...
            kspan, omegaf(2:end,2), '--^', ...
            kspan, omegaf(2:end,3), '-.^', ...
            'Color', '#FF6347', 'MarkerEdgeColor','#FF6347', ...
            'MarkerFaceColor','#FF6347')     %tomato
        hold off
        legend({'$M_{\Xi_1}$', '$M_{\Xi_2}$', ...
            '$M_{\Xi_3}$', ...
            '$E_{\Xi_1}$', '$E_{\Xi_2}$', ...
            '$E_{\Xi_3}$', ...
            '$V_{\Xi_1}$', '$V_{\Xi_2}$', ...
            '$V_{\Xi_3}$'}, ...
        'Interpreter','latex','FontSize',16, ...
        'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

        figure, %omit dummy first point
        semilogy(kspan, modef(2:end,1), '-v', ...
            kspan, modef(2:end,2), '--v', ...
            kspan, modef(2:end,3), '-.v', ...
            'Color', '#FF00FF', 'MarkerEdgeColor','#FF00FF', ...
            'MarkerFaceColor','#FF00FF'),...     %fuchsia
        xlabel('$k$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        %xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        semilogy(kspan, psif(2:end,1), '-s', ...
            kspan, psif(2:end,2), '--s', ...
            kspan, psif(2:end,3), '-.s', ...
            'Color', '#32CD32', 'MarkerEdgeColor','#32CD32')     %lime green
        semilogy(kspan, omegaf(2:end,1), '-^', ...
            kspan, omegaf(2:end,2), '--^', ...
            kspan, omegaf(2:end,3), '-.^', ...
            'Color', '#FF6347', 'MarkerEdgeColor','#FF6347', ...
            'MarkerFaceColor','#FF6347')     %tomato
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')
        

   %%% Inverse Gamma statistics - model - plots against b/(a-1)

   %same legend
   
        figure, %omit dummy first point
        loglog(crit0(2:end), modef(2:end,1), '-v', ...
            crit0(2:end), modef(2:end,2), '--v', ...
            crit0(2:end), modef(2:end,3), '-.v', ...
            'Color', '#FF00FF', 'MarkerEdgeColor','#FF00FF', ...
            'MarkerFaceColor','#FF00FF'),...     %fuchsia
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(crit0(2:end), psif(2:end,1), '-s', ...
            crit0(2:end), psif(2:end,2), '--s', ...
            crit0(2:end), psif(2:end,3), '-.s', ...
            'Color', '#32CD32', 'MarkerEdgeColor','#32CD32')     %lime green
        loglog(crit0(2:end), omegaf(2:end,1), '-^', ...
            crit0(2:end), omegaf(2:end,2), '--^', ...
            crit0(2:end), omegaf(2:end,3), '-.^', ...
            'Color', '#FF6347', 'MarkerEdgeColor','#FF6347', ...
            'MarkerFaceColor','#FF6347')     %tomato
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')
   

   
   %%%% 2norm plots 
        
   figure, %omit dummy first point
        loglog(crit0(2:end), Resid2(2:end,1), 'b-^', ...
            crit0(2:end), Resid2(2:end,2), 'b--^', ...
            crit0(2:end), Resid2(2:end,3), 'b-.^', ...
            'MarkerFaceColor','b'), ...
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(crit0(2:end), Reg2(2:end,1), 'r-*', ...
            crit0(2:end), Reg2(2:end,2), 'r--*', ...
            crit0(2:end), Reg2(2:end,3), 'r-.*')
        loglog(crit0(2:end), Jtilde2(2:end,1), 'k-s', ...
            crit0(2:end), Jtilde2(2:end,2), 'k--s', ...
            crit0(2:end), Jtilde2(2:end,3), 'k-.s')
        hold off
        legend({'$||\dot{X}_1 - \Theta \Xi_1||^2_2$', ...
        '$||\dot{X}_2 - \Theta \Xi_2||^2_2$', ...
        '$||\dot{X}_3 - \Theta \Xi_3||^2_2$', ...
        '$||\Xi_1||^2_2$','$||\Xi_2||^2_2$','$||\Xi_3||^2_2$', ...
        '${J}^{reg2}_1$','${J}^{reg2}_2$','${J}^{reg2}_3$'}, ...
        'Interpreter','latex','FontSize',16, ...
        'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

   figure, %omit dummy first point
        loglog(crit0(2:end), Resid2(2:end,1), 'b-^', ...
            crit0(2:end), Resid2(2:end,2), 'b--^', ...
            crit0(2:end), Resid2(2:end,3), 'b-.^', ...
            'MarkerFaceColor','b'), ...
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(crit0(2:end), Reg2(2:end,1), 'r-*', ...
            crit0(2:end), Reg2(2:end,2), 'r--*', ...
            crit0(2:end), Reg2(2:end,3), 'r-.*')
        loglog(crit0(2:end), Jtilde2(2:end,1), 'k-s', ...
            crit0(2:end), Jtilde2(2:end,2), 'k--s', ...
            crit0(2:end), Jtilde2(2:end,3), 'k-.s')
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')      

  %%%%  plots of logs of likelihood, prior, sum, post, evid - full Gaussian terms

   figure, %omit dummy first point - with legend
        loglog(crit0(2:end), Resid(2:end,1), 'c-^', ...
            crit0(2:end), Resid(2:end,2), 'c--^', ...
            crit0(2:end), Resid(2:end,3), 'c-.^', 'MarkerFaceColor','c'), ...
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(crit0(2:end), -Reg(2:end,1), 'm-*', ...
            crit0(2:end), -Reg(2:end,2), 'm--*', ...
            crit0(2:end), -Reg(2:end,3), 'm-.*')
        loglog(crit0(2:end), logPost(2:end,1), '-p',...
            crit0(2:end), logPost(2:end,2), '--p',...
            crit0(2:end), logPost(2:end,3), '-.p',...
            'Color', '#008000', 'MarkerEdgeColor','#008000')  %green
        loglog(crit0(2:end), logEvid(2:end,1), '-h',...
            crit0(2:end), logEvid(2:end,2), '--h',...
            crit0(2:end), logEvid(2:end,3), '-.h',...
            'Color', '#F4A460', 'MarkerEdgeColor','#F4A460', ...
            'MarkerFaceColor','#F4A460')     %sandy brown
        loglog(crit0(2:end), logEvidalt(2:end,1), '-o',...
            crit0(2:end), logEvidalt(2:end,2), '--o',...
            crit0(2:end), logEvidalt(2:end,3), '-.o',...
            'Color', '#9400D3', 'MarkerEdgeColor','#9400D3')  %dark violet
        hold off
        legend({'$lnL_1$','$lnL_2$','$lnL_3$', ...
        '$-lnQ_1$','$-lnQ_2$','$-lnQ_3$', ...
        '$lnP_1$','$lnP_2$','$lnP_3$',...
        '$lnZ_1$','$lnZ_2$','$lnZ_3$',...
        '$lnZ_{alt1}$','$lnZ_{alt2}$','$lnZ_{alt3}$'},...
        'Interpreter','latex','FontSize',16, 'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

   figure, %omit dummy first point
        loglog(crit0(2:end), Resid(2:end,1), 'c-^', ...
            crit0(2:end), Resid(2:end,2), 'c--^', ...
            crit0(2:end), Resid(2:end,3), 'c-.^', 'MarkerFaceColor','c'), ...
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(crit0(2:end), -Reg(2:end,1), 'm-*', ...
            crit0(2:end), -Reg(2:end,2), 'm--*', ...
            crit0(2:end), -Reg(2:end,3), 'm-.*')
        loglog(crit0(2:end), logPost(2:end,1), '-p',...
            crit0(2:end), logPost(2:end,2), '--p',...
            crit0(2:end), logPost(2:end,3), '-.p',...
            'Color', '#008000', 'MarkerEdgeColor','#008000')  %green
        loglog(crit0(2:end), logEvid(2:end,1), '-h',...
            crit0(2:end), logEvid(2:end,2), '--h',...
            crit0(2:end), logEvid(2:end,3), '-.h',...
            'Color', '#F4A460', 'MarkerEdgeColor','#F4A460', ...
            'MarkerFaceColor','#F4A460')     %sandy brown
         loglog(crit0(2:end), logEvidalt(2:end,1), '-o',...
            crit0(2:end), logEvidalt(2:end,2), '--o',...
            crit0(2:end), logEvidalt(2:end,3), '-.o',...
            'Color', '#9400D3', 'MarkerEdgeColor','#9400D3')  %dark violet
       hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')      

%compare evidence and alt evidence

%logZmax=1.1*max([max(logEvid(2:end)) max(logEvidalt(2:end))])
%logZmin=0.9*max([min(logEvid(2:end)) min(logEvidalt(2:end))])

   figure, %omit dummy first point - with legend
        loglog(crit0(2:end), logEvid(2:end,1), '-h',...
            crit0(2:end), logEvid(2:end,2), '--h',...
            crit0(2:end), logEvid(2:end,3), '-.h',...
            'Color', '#F4A460', 'MarkerEdgeColor','#F4A460', ...
            'MarkerFaceColor','#F4A460')     %sandy brown
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        xlim(crit0lim), ...
        %ylim=([logZmin logZmax]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(crit0(2:end), logEvidalt(2:end,1), '-o',...
            crit0(2:end), logEvidalt(2:end,2), '--o',...
            crit0(2:end), logEvidalt(2:end,3), '-.o',...
            'Color', '#9400D3', 'MarkerEdgeColor','#9400D3')  %dark violet
        hold off
        legend({'$lnZ_1$','$lnZ_2$','$lnZ_3$',...
        '$lnZ_{alt1}$','$lnZ_{alt2}$','$lnZ_{alt3}$'}, ...
        'Interpreter','latex','FontSize',16, 'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc') 

   figure, %omit dummy first point
        loglog(crit0(2:end), logEvid(2:end,1), '-h',...
            crit0(2:end), logEvid(2:end,2), '--h',...
            crit0(2:end), logEvid(2:end,3), '-.h',...
            'Color', '#F4A460', 'MarkerEdgeColor','#F4A460', ...
            'MarkerFaceColor','#F4A460')     %sandy brown
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        xlim(crit0lim), ...
        %ylim=([logZmin logZmax]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(crit0(2:end), logEvidalt(2:end,1), '-o',...
            crit0(2:end), logEvidalt(2:end,2), '--o',...
            crit0(2:end), logEvidalt(2:end,3), '-.o',...
            'Color', '#9400D3', 'MarkerEdgeColor','#9400D3')  %dark violet
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc') 


%%%% Gaussian plots of terms - Gnorm plots only 

   figure, %omit dummy first point - with legend
        loglog(crit0(2:end), ResidGnorm(2:end,1), '-s', ...
            crit0(2:end), ResidGnorm(2:end,2), '--s', ...
            crit0(2:end), ResidGnorm(2:end,3), '-.s', ...
            'Color', '#0000CD', 'MarkerEdgeColor','#0000CD', ...
            'MarkerFaceColor','#0000CD'), ...    %medium blue
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(crit0(2:end), RegGnorm(2:end,1), '-p', ...
            crit0(2:end), RegGnorm(2:end,2), '--p', ...
            crit0(2:end), RegGnorm(2:end,3), '-.p', ...
            'Color', '#FF1D8E', 'MarkerEdgeColor','#FF1D8E') %hot pink
        loglog(crit0(2:end), PostGnorm(2:end,1), '-o',...
            crit0(2:end), PostGnorm(2:end,2), '--o',...
            crit0(2:end), PostGnorm(2:end,3), '-.o', ...
            'Color', '#006400', 'MarkerEdgeColor','#006400')  %dark green
        loglog(crit0(2:end), EvidGnorm(2:end,1), '-h',...
            crit0(2:end), EvidGnorm(2:end,2), '--h',...
            crit0(2:end), EvidGnorm(2:end,3), '-.h', ...
            'Color', '#D2691E', 'MarkerEdgeColor','#D2691E', ...
            'MarkerFaceColor','#D2691E')  %chocolate, orange
         loglog(crit0(2:end), EvidGnormalt(2:end,1), '-o',...
            crit0(2:end), EvidGnormalt(2:end,2), '--o',...
            crit0(2:end), EvidGnormalt(2:end,3), '-.o', ...
            'Color', '#483D8B', 'MarkerEdgeColor','#483D8B')  %dark slate blue
       hold off
        legend(...
         {'$||\dot{X}_1 - \Theta \Xi_1||^2_{V^{-1}_{\epsilon_1}}$', ...
        '$||\dot{X}_2 - \Theta \Xi_2||^2_{V^{-1}_{\epsilon_2}}$', ...
        '$||\dot{X}_3 - \Theta \Xi_3||^2_{V^{-1}_{\epsilon_3}}$', ...
        '$||\Xi_1||^2_{V^{-1}_{\Xi_1}}$', ...
        '$||\Xi_2||^2_{V^{-1}_{\Xi_2}}$', ...
        '$||\Xi_3||^2_{V^{-1}_{\Xi_3}}$', ...
        '$||\Xi_1 - \hat{\Xi}_1||^2_{\Delta^{-1}_1}$', ...
        '$||\Xi_2 - \hat{\Xi}_2||^2_{\Delta^{-1}_2}$', ...
        '$||\Xi_3 - \hat{\Xi}_3||^2_{\Delta^{-1}_3}$', ...
        '$||\dot{X}_1||^2_{\Omega^{-1}_1}$', ...
        '$||\dot{X}_2||^2_{\Omega^{-1}_2}$', ...
        '$||\dot{X}_3||^2_{\Omega^{-1}_3}$',...
        '$||\dot{X}_1||^2_{\Omega^{-1}_{alt1}}$', ...
        '$||\dot{X}_2||^2_{\Omega^{-1}_{alt2}}$', ...
        '$||\dot{X}_3||^2_{\Omega^{-1}_{alt3}}$'}, ...
        'Interpreter','latex','FontSize',16, 'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

   figure, %omit dummy first point - without legend
        loglog(crit0(2:end), ResidGnorm(2:end,1), '-s', ...
            crit0(2:end), ResidGnorm(2:end,2), '--s', ...
            crit0(2:end), ResidGnorm(2:end,3), '-.s', ...
            'Color', '#0000CD', 'MarkerEdgeColor','#0000CD', ...
            'MarkerFaceColor','#0000CD'), ...
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        xlim(crit0lim), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(crit0(2:end), RegGnorm(2:end,1), '-p', ...
            crit0(2:end), RegGnorm(2:end,2), '--p', ...
            crit0(2:end), RegGnorm(2:end,3), '-.p', ...
            'Color', '#FF1D8E', 'MarkerEdgeColor','#FF1D8E') 
        loglog(crit0(2:end), PostGnorm(2:end,1), '-o',...
            crit0(2:end), PostGnorm(2:end,2), '--o',...
            crit0(2:end), PostGnorm(2:end,3), '-.o', ...
            'Color', '#006400', 'MarkerEdgeColor','#006400')
        loglog(crit0(2:end), EvidGnorm(2:end,1), '-h',...
            crit0(2:end), EvidGnorm(2:end,2), '--h',...
            crit0(2:end), EvidGnorm(2:end,3), '-.h', ...
            'Color', '#D2691E', 'MarkerEdgeColor','#D2691E', ...
            'MarkerFaceColor','#D2691E')  %chocolate
        loglog(crit0(2:end), EvidGnormalt(2:end,1), '-o',...
            crit0(2:end), EvidGnormalt(2:end,2), '--o',...
            crit0(2:end), EvidGnormalt(2:end,3), '-.o', ...
            'Color', '#483D8B', 'MarkerEdgeColor','#483D8B')  %dark slate blue
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

 %compare Gnorms of evidence, alt evidence       
        
%ZGnormmax=1.1*max([max(EvidGnorm(2:end)) max(EvidGnormalt(2:end))])
%ZGnormmin=0.9*max([min(EvidGnorm(2:end)) min(EvidGnormalt(2:end))])

        figure, %omit dummy first point - with legend
        loglog(crit0(2:end), EvidGnorm(2:end,1), '-h',...
            crit0(2:end), EvidGnorm(2:end,2), '--h',...
            crit0(2:end), EvidGnorm(2:end,3), '-.h', ...
            'Color', '#D2691E', 'MarkerEdgeColor','#D2691E', ...
            'MarkerFaceColor','#D2691E')  %chocolate
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        xlim(crit0lim), ...
        %ylim=([ZGnormmin ZGnormmax]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(crit0(2:end), EvidGnormalt(2:end,1), '-o',...
            crit0(2:end), EvidGnormalt(2:end,2), '--o',...
            crit0(2:end), EvidGnormalt(2:end,3), '-.o', ...
            'Color', '#483D8B', 'MarkerEdgeColor','#483D8B')  %dark slate blue
        hold off
        legend({'$||\dot{X}_1||^2_{\Omega^{-1}_{1}}$', ...
        '$||\dot{X}_2||^2_{\Omega^{-1}_{2}}$', ...
        '$||\dot{X}_3||^2_{\Omega^{-1}_{3}}$', ...
        '$||\dot{X}_1||^2_{\Omega^{-1}_{alt1}}$', ...
        '$||\dot{X}_2||^2_{\Omega^{-1}_{alt2}}$', ...
        '$||\dot{X}_3||^2_{\Omega^{-1}_{alt3}}$'}, ...
        'Interpreter','latex','FontSize',16, 'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

        figure, %omit dummy first point 
        loglog(crit0(2:end), EvidGnorm(2:end,1), '-h',...
            crit0(2:end), EvidGnorm(2:end,2), '--h',...
            crit0(2:end), EvidGnorm(2:end,3), '-.h', ...
            'Color', '#D2691E', 'MarkerEdgeColor','#D2691E', ...
            'MarkerFaceColor','#D2691E')  %chocolate
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),...
        xlim(crit0lim), ...
        %ylim=([ZGnormmin ZGnormmax]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(crit0(2:end), EvidGnormalt(2:end,1), '-o',...
            crit0(2:end), EvidGnormalt(2:end,2), '--o',...
            crit0(2:end), EvidGnormalt(2:end,3), '-.o', ...
            'Color', '#483D8B', 'MarkerEdgeColor','#483D8B')  %dark slate blue
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')


 %%%% plots of metrics: aic, bic, EB

    figure 
    subplot(3,1,1),loglog(crit0(2:end), -aic(2:end,1), '-o', ...
            crit0(2:end), -aic(2:end,2), '--o', ...
            crit0(2:end), -aic(2:end,3), '-.o', 'Color', '#8A2BE2', ...
            'MarkerEdgeColor','#8A2BE2', 'MarkerFaceColor','#8A2BE2'), ...
        %xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('-AIC','FontSize',18),...
        xlim(crit0lim), ...
        %ylim([metricmin metricmax]), ...
        title({fighead; Fighead_text},'FontSize',18)
        box on, grid off
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
    subplot(3,1,2),loglog(crit0(2:end), -bic(2:end,1), '-v', ...
            crit0(2:end), -bic(2:end,2), '--v', ...
            crit0(2:end), -bic(2:end,3), '-.v', 'Color', '#00FF00',...
            'MarkerEdgeColor','#00FF00'), ...
        %xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('-BIC','FontSize',18),...
        xlim(crit0lim), ...
        %ylim([metricmin metricmax]), ...
        %title({fighead; Fighead_text},'FontSize',18)
        box on, grid off
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
    subplot(3,1,3),loglog(crit0(2:end), EB(2:end,1), '-x', ...
            crit0(2:end), EB(2:end,2), '--x', ...
            crit0(2:end), EB(2:end,3), '-.x', 'Color', '#DC143C',...
            'MarkerEdgeColor','#DC143C'), ...
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('EB','FontSize',18),...
        xlim(crit0lim), ...
        %ylim([metricmin metricmax]), ...
        %title({fighead; Fighead_text},'FontSize',18)
        box on, grid off
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
    fignum=fignum+1; 
    saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')



%%%% plots of metrics: aic2norm, bic2norm, aicc2norm

    figure 
    subplot(3,1,1),loglog(crit0(2:end), -aic2norm(2:end,1), '-o', ...
            crit0(2:end), -aic2norm(2:end,2), '--o', ...
            crit0(2:end), -aic2norm(2:end,3), '-.o', 'Color', '#8A2B00', ...
            'MarkerEdgeColor','#8A2B00', 'MarkerFaceColor','#8A2B00'), ...
        %xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('-AIC$_2$','Interpreter','latex','FontSize',18),...
        xlim(crit0lim), ...
        %ylim([metricmin metricmax]), ...
        title({fighead; Fighead_text},'FontSize',18)
        box on, grid off
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
    subplot(3,1,2),loglog(crit0(2:end), -bic2norm(2:end,1), '-v', ...
            crit0(2:end), -bic2norm(2:end,2), '--v', ...
            crit0(2:end), -bic2norm(2:end,3), '-.v', 'Color', '#00FFAA',...
            'MarkerEdgeColor','#00FFAA'), ...
        %xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('-BIC$_2$','Interpreter','latex','FontSize',18),...
        xlim(crit0lim), ...
        %ylim([metricmin metricmax]), ...
        %title({fighead; Fighead_text},'FontSize',18)
        box on, grid off
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
    subplot(3,1,3),loglog(crit0(2:end), -aicc2norm(2:end,1), '-x', ...
            crit0(2:end), -aicc2norm(2:end,2), '--x', ...
            crit0(2:end), -aicc2norm(2:end,3), '-.x', 'Color', '#DC1400',...
            'MarkerEdgeColor','#DC1400'), ...
        xlabel(xlab,'Interpreter','latex','FontSize',18),...
        ylabel('-AIC$^c_2$','Interpreter','latex','FontSize',18),...
        xlim(crit0lim), ...
        %ylim([metricmin metricmax]), ...
        %title({fighead; Fighead_text},'FontSize',18)
        box on, grid off
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
    fignum=fignum+1; 
    saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')
   
   

%%%%plots against kappa_j

    figure, %omit dummy first point - with legend
        loglog(lambda(2:end,1), Resid2(2:end,1), 'b-^', ...
            lambda(2:end,2), Resid2(2:end,2), 'b--^', ...
            lambda(2:end,3), Resid2(2:end,3), 'b-.^', 'MarkerFaceColor','b'), ...
        xlabel('$\kappa_j$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),  ...
        xlim([lambdamin,lambdamax]), ...
        %ylim([1.0e-30 1.0e20]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(lambda(2:end,1), Reg2(2:end,1), 'r-*', ...
            lambda(2:end,2), Reg2(2:end,2), 'r--*', ...
            lambda(2:end,3), Reg2(2:end,3), 'r-.*')
        loglog(lambda(2:end,1), Jtilde2(2:end,1), 'k-s', ...
            lambda(2:end,2), Jtilde2(2:end,2), 'k--s', ...
            lambda(2:end,3), Jtilde2(2:end,3), 'k-.s')
        hold off
        legend({'$||\dot{X}_1 - \Theta \Xi_1||^2_2$', ...
        '$||\dot{X}_2 - \Theta \Xi_2||^2_2$', ...
        '$||\dot{X}_3 - \Theta \Xi_3||^2_2$', ...
        '$||\Xi_1||^2_2$','$||\Xi_2||^2_2$','$||\Xi_3||^2_2$', ...
        '${J}^{reg2}_1$','${J}^{reg2}_2$','${J}^{reg2}_3$'}, ...
        'Interpreter','latex','FontSize',16, ...
        'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

    figure, %omit dummy first point
        loglog(lambda(2:end,1), Resid2(2:end,1), 'b-^', ...
            lambda(2:end,2), Resid2(2:end,2), 'b--^', ...
            lambda(2:end,3), Resid2(2:end,3), 'b-.^', 'MarkerFaceColor','b'), ...
        xlabel('$\kappa_j$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18),  ...
        xlim([lambdamin,lambdamax]), ...
        %ylim([1.0e-30 1.0e20]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(lambda(2:end,1), Reg2(2:end,1), 'r-*', ...
            lambda(2:end,2), Reg2(2:end,2), 'r--*', ...
            lambda(2:end,3), Reg2(2:end,3), 'r-.*')
        loglog(lambda(2:end,1), Jtilde2(2:end,1), 'k-s', ...
            lambda(2:end,2), Jtilde2(2:end,2), 'k--s', ...
            lambda(2:end,3), Jtilde2(2:end,3), 'k-.s')
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')        


                
elseif o==4

    %not implemented yet!
  
end
         



