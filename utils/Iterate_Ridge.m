%% Iterate over Ridge method 
% Copyright Robert Niven, 2024, All Rights Reserved

clear k 

'Iterate Ridge **********'

%parameters

k=1;   %matlab problem, cannot start iterations from zero !
theta(k)=theta0;    %initial value

while theta(k) > thetalim      %iterate to theta limit criterion
    'Iteration **********'
    k=k+1
    kmax=k
    format longEng    
    %same theta across all columns
    theta(k)=theta(k-1)/thetafact
    true_Xi
    Xi=zeros(cc,n);
    for i=1:o
        g=dx(:,i);
        Br=ridge(g,H,theta(k),scaleRidge); %note is opposite notation to lasso
        if scaleRidge==0        %normalises data and rescales; returns constant term in output     
            Xi(:,i)=Br(2:cc+1);
        elseif scaleRidge==1    %DEFAULT, normalises data, does not rescale
            Xi(:,i)=Br;
        end
    end
    Xi_Ridge=Xi

    if knownXi=='Y';     %calc data - known param values in Xi
        diffXi=true_Xi-Xi     %known function
    elseif knownXi=='N'
        diffXi=Xi-Xi          %to show errors; unknown function
    end;

    %2norm quantities
    for i=1:o    %loop over Y dimensions o
        Resid2_Ridge(k,i)= (norm(dx(:,i) - H*Xi(:,i)))^2;
        Reg2_Ridge(k,i)= (norm(Xi(:,i)))^2;
        Jtilde2_Ridge(k,i)=Resid2_Ridge(k,i) + theta(k)*Reg2_Ridge(k,i);  %Tik obj function 
        %this really does match the problem!
    end

    Resid2_Ridge(k,:)
    Reg2_Ridge(k,:)
    Jtilde2_Ridge(k,:)     

    % Show and compare the coefficients and generated time series
    Title_text='Ridge regression method'; 
    if dynsys==1
         Show_comparisons6a;
    elseif hydrolmodel==1 | RRmodel==1
         Show_comparisons8;
    end;

end

'Results from all iterations **********'
format longEng

kspan=[2:1:kmax]; %k data starting from 2
kapspan=[theta(kmax),theta0]; 

%true_Xi
%Xi_Ridge

numit_Ridge=kmax
theta_Ridge = theta

Resid2_Ridge
Reg2_Ridge
Jtilde2_Ridge  

%Title_text='Ridge'; 
Fighead_text='Ridge regression iterations';

%plot over iterations

%variation of theta with k, all dimensions
     figure, %omit dummy first point
        semilogy(kspan, theta_Ridge(2:end), 'm-o', ...
            'MarkerFaceColor','m'), ...
        xlabel('$k$','Interpreter','latex','FontSize',18),...
        ylabel('$\theta$','FontSize',18), ...
        ylim(kapspan), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

if o==1
   %hardwired 1D; plots against theta
   %awkward format to allow filled markers

    figure, %omit dummy first point
        loglog(theta_Ridge(2:end), Resid2_Ridge(2:end,1), 'b-^', ...
            'MarkerFaceColor','b'), ...
        xlabel('$\theta$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18), ...
        xlim(kapspan), ylim([1.0e-30,1.0e5]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(theta_Ridge(2:end), Reg2_Ridge(2:end,1), 'r-*')
        loglog(theta(2:end), Jtilde2_Ridge(2:end,1), 'k-s')
        hold off
        legend({'$||\dot{X}_1 - \Theta \Xi_1||^2_2$', ...
        '$||\Xi_1||^2_2$','${J}^{Ridge}_1$'}, 'Interpreter','latex',...
        'FontSize',16, ...
        'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

    figure, %omit dummy first point
        loglog(theta_Ridge(2:end), Resid2_Ridge(2:end,1), 'b-^', ...
            'MarkerFaceColor','b'), ...
        xlabel('$\theta$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18), ...
        xlim(kapspan), ylim([1.0e-30,1.0e5]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(theta_Ridge(2:end), Reg2_Ridge(2:end,1), 'r-*')
        loglog(theta(2:end), Jtilde2_Ridge(2:end,1), 'k-s')
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

elseif o==2
   %hardwired 2D; plots against theta
   %awkward format to allow filled markers

    figure, %omit dummy first point
        loglog(theta_Ridge(2:end), Resid2_Ridge(2:end,1), 'b-^', ...
            theta_Ridge(2:end), Resid2_Ridge(2:end,2), 'b--^', ...
            'MarkerFaceColor','b'), ...
        xlabel('$\theta$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18), ...
        xlim(kapspan), ylim([1.0e-30,1.0e20]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(theta_Ridge(2:end), Reg2_Ridge(2:end,1), 'r-*', ...
            theta_Ridge(2:end), Reg2_Ridge(2:end,2), 'r--*')
        loglog(theta(2:end), Jtilde2_Ridge(2:end,1), 'k-s', ...
            theta_Ridge(2:end), Jtilde2_Ridge(2:end,2), 'k--s')
        hold off
        legend({'$||\dot{X}_1 - \Theta \Xi_1||^2_2$', ...
        '$||\dot{X}_2 - \Theta \Xi_2||^2_2$', ...
        '$||\Xi_1||^2_2$','$||\Xi_2||^2_2$', ...
        '${J}^{Ridge}_1$','${J}^{Ridge}_2$'}, ...
        'Interpreter','latex','FontSize',16, ...
        'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

    figure, %omit dummy first point
        loglog(theta_Ridge(2:end), Resid2_Ridge(2:end,1), 'b-^', ...
            theta_Ridge(2:end), Resid2_Ridge(2:end,2), 'b--^', ...
            'MarkerFaceColor','b'), ...
        xlabel('$\theta$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18), ...
        xlim(kapspan), ylim([1.0e-30,1.0e20]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(theta_Ridge(2:end), Reg2_Ridge(2:end,1), 'r-*', ...
            theta_Ridge(2:end), Reg2_Ridge(2:end,2), 'r--*')
        loglog(theta(2:end), Jtilde2_Ridge(2:end,1), 'k-s', ...
            theta_Ridge(2:end), Jtilde2_Ridge(2:end,2), 'k--s')
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')        

elseif o==3
   %hardwired 3D; plots against theta
   %awkward format to allow filled markers
    figure, %omit dummy first point
        loglog(theta_Ridge(2:end), Resid2_Ridge(2:end,1), 'b-^', ...
            theta_Ridge(2:end), Resid2_Ridge(2:end,2), 'b--^', ...
            theta_Ridge(2:end), Resid2_Ridge(2:end,3), 'b-.^', ...
            'MarkerFaceColor','b'), ...
        xlabel('$\theta_j$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18), ...
        xlim(kapspan), ... %ylim([1.0e-30,1.0e20]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(theta_Ridge(2:end), Reg2_Ridge(2:end,1), 'r-*', ...
            theta_Ridge(2:end), Reg2_Ridge(2:end,2), 'r--*', ...
            theta_Ridge(2:end), Reg2_Ridge(2:end,3), 'r-.*')
        loglog(theta(2:end), Jtilde2_Ridge(2:end,1), 'k-s', ...
            theta_Ridge(2:end), Jtilde2_Ridge(2:end,2), 'k--s', ...
            theta_Ridge(2:end), Jtilde2_Ridge(2:end,3), 'k-.s')
        hold off
        legend({'$||\dot{X}_1 - \Theta \Xi_1||^2_2$', ...
        '$||\dot{X}_2 - \Theta \Xi_2||^2_2$', ...
        '$||\dot{X}_3 - \Theta \Xi_3||^2_2$', ...
        '$||\Xi_1||^2_2$','$||\Xi_2||^2_2$','$||\Xi_3||^2_2$', ...
        '${J}^{Ridge}_1$','${J}^{Ridge}_2$','${J}^{Ridge}_3$'}, ...
        'Interpreter','latex','FontSize',16, ...
        'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

    figure, %omit dummy first point
        loglog(theta_Ridge(2:end), Resid2_Ridge(2:end,1), 'b-^', ...
            theta_Ridge(2:end), Resid2_Ridge(2:end,2), 'b--^', ...
            theta_Ridge(2:end), Resid2_Ridge(2:end,3), 'b-.^', 'MarkerFaceColor','b'), ...
        xlabel('$\theta_j$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18), ...
        xlim(kapspan), ... %ylim([1.0e-30,1.0e20]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(theta_Ridge(2:end), Reg2_Ridge(2:end,1), 'r-*', ...
            theta_Ridge(2:end), Reg2_Ridge(2:end,2), 'r--*', ...
            theta_Ridge(2:end), Reg2_Ridge(2:end,3), 'r-.*')
        loglog(theta(2:end), Jtilde2_Ridge(2:end,1), 'k-s', ...
            theta_Ridge(2:end), Jtilde2_Ridge(2:end,2), 'k--s', ...
            theta_Ridge(2:end), Jtilde2_Ridge(2:end,3), 'k-.s')
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

elseif o==4
   %hardwired 4D; plots against theta
   %awkward format to allow filled markers
    figure, %omit dummy first point
        loglog(theta_Ridge(2:end), Resid2_Ridge(2:end,1), 'b-^', ...
            theta_Ridge(2:end), Resid2_Ridge(2:end,2), 'b--^', ...
            theta_Ridge(2:end), Resid2_Ridge(2:end,3), 'b-.^',...
            theta_Ridge(2:end), Resid2_Ridge(2:end,4), 'b:^', ...
            'MarkerFaceColor','b'), ...
        xlabel('$\theta$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18), ...
        xlim(kapspan), ylim([1.0e-30,1.0e20]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(theta_Ridge(2:end), Reg2_Ridge(2:end,1), 'r-*', ...
            theta_Ridge(2:end), Reg2_Ridge(2:end,2), 'r--*', ...
            theta_Ridge(2:end), Reg2_Ridge(2:end,3), 'r-.*', ...
            theta_Ridge(2:end), Reg2_Ridge(2:end,4), 'r:*')
        loglog(theta(2:end), Jtilde2_Ridge(2:end,1), 'k-s', ...
            theta_Ridge(2:end), Jtilde2_Ridge(2:end,2), 'k--s', ...
            theta_Ridge(2:end), Jtilde2_Ridge(2:end,3), 'k-.s', ...
            theta_Ridge(2:end), Jtilde2_Ridge(2:end,4), 'k:s')
        hold off
        legend({'$||\dot{X}_1 - \Theta \Xi_1||^2_2$', ...
        '$||\dot{X}_2 - \Theta \Xi_2||^2_2$', ...
        '$||\dot{X}_3 - \Theta \Xi_3||^2_2$', ...
        '$||\dot{X}_4 - \Theta \Xi_4||^2_2$', ...
        '$||\Xi_1||^2_2$','$||\Xi_2||^2_2$','$||\Xi_3||^2_2$', '$||\Xi_4||^2_2$', ...
        '${J}^{Ridge}_1$','${J}^{Ridge}_2$','${J}^{Ridge}_3$','${J}^{Ridge}_4$'}, ...
        'Interpreter','latex','FontSize',16, ...
        'Location','southoutside')
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')

    figure, %omit dummy first point
        loglog(theta_Ridge(2:end), Resid2_Ridge(2:end,1), 'b-^', ...
            theta_Ridge(2:end), Resid2_Ridge(2:end,2), 'b--^', ...
            theta_Ridge(2:end), Resid2_Ridge(2:end,3), 'b-.^',...
            theta_Ridge(2:end), Resid2_Ridge(2:end,4), 'b:^', ...
            'MarkerFaceColor','b'), ...
        xlabel('$\theta$','Interpreter','latex','FontSize',18),...
        ylabel('Variable','FontSize',18), ...
        xlim(kapspan), ylim([1.0e-30,1.0e20]), ...
        title({fighead; Fighead_text},'FontSize',18)
        ax = gca; ax.XAxis.FontSize = 16; ax.YAxis.FontSize = 16;
        hold on
        loglog(theta_Ridge(2:end), Reg2_Ridge(2:end,1), 'r-*', ...
            theta_Ridge(2:end), Reg2_Ridge(2:end,2), 'r--*', ...
            theta_Ridge(2:end), Reg2_Ridge(2:end,3), 'r-.*', ...
            theta_Ridge(2:end), Reg2_Ridge(2:end,4), 'r:*')
        loglog(theta(2:end), Jtilde2_Ridge(2:end,1), 'k-s', ...
            theta_Ridge(2:end), Jtilde2_Ridge(2:end,2), 'k--s', ...
            theta_Ridge(2:end), Jtilde2_Ridge(2:end,3), 'k-.s', ...
            theta_Ridge(2:end), Jtilde2_Ridge(2:end,4), 'k:s')
        hold off
        fignum=fignum+1; 
        saveas(gcf,fullfile(pwd, dirname,strcat('Fig',int2str(fignum))),'epsc')        
end 



